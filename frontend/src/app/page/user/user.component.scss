@use '../../../styles'as styles;

.wrapper {
  padding: 3rem 0;
  font-family: verdana;
}

.table {
  color: styles.$white;

  &-responsive {
    min-height: 630px;
  }
}

// TH
thead {
  // background-color: rgba(0, 152, 121, 0.2);
  background-color: rgba(0, 0, 0, 0.3);
  text-align: left;
  position: sticky;
  top: 0;
  border: none !important; // bootstrap
  height: 50px;

  & th {
    border: none;
    margin: auto 0;
    vertical-align: middle;

    &:not(:last-child) {
      cursor: pointer;
      font-weight: 300;
    }

    &:hover:not(:last-child) {
      // box-shadow: rgba(0, 255, 255, 7) 0px 50px 26px -28px inset;
      // box-shadow: rgba(0, 255, 255, 7) 0px -40px 40px -42px inset;
      box-shadow: rgba(0, 255, 255, 7) 0px -40px 26px -28px inset;
    }

    &:first-child {
      border-top-left-radius: 0.6rem;
    }

    &:last-child {
      border-top-right-radius: 0.6rem;
    }

    &::after {
      content: '';
      position: absolute;
      z-index: -1; // Add a z-index below z-index on TD so you can still select data from your table rows :)
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      border-bottom: thin solid transparent;
      border-image: radial-gradient(ellipse at center, rgba(styles.$theme, 0.9) 70%, rgba(0, 0, 0, 0) 100%);
      border-image-slice: 1;
    }

  }
}

tbody {
  border-top: none !important; // bootstrap

  & tr {
    position: relative; // to contain the ::after element within the table-row

    &:hover {
      background-color: rgba(0, 0, 0, 0.3);
    }

    &::after {
      content: '';
      position: absolute;
      z-index: 1; // Add a z-index below z-index on TD so you can still select data from your table rows :)
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      border-bottom: thin solid transparent;
      border-image: radial-gradient(ellipse at center, rgba(styles.$theme, 0.9) 70%, rgba(0, 0, 0, 0) 100%);
      border-image-slice: 1;
    }

    & td {
      position: relative; // needed to apply a z-index
      z-index: 2; // needs to be higher than the z-index on the tr::after element
      border: none;
    }
  }
}

// button {
//   background-color: #eee;
//   color: #000;
//   border: none;
//   border-radius: 0.3rem;
// }

.add__new {
  background-color: rgba(0, 162, 255, 0.3);
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
}

.add__new:hover {
  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
}

@function tableButtonShadowGenerator($color) {
  @return drop-shadow(0px 0px 4px rgba($color, 1));
}

.admin__buttons {

  & button {
    // width: 2.6rem;
    // height: 2.2rem;
    // padding: 0;
    // background-color: styles.$white;
    color: styles.$white;

    // &:hover {}
  }

  & .ban__button:hover {
    // color: styles.$ban-color;

    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$ban-color);
    }
  }

  & .unban__button:hover {
    // color: styles.$unban-color;

    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$unban-color);
    }
  }

  & .edit__button:hover {
    // color: styles.$edit-color;

    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$edit-color);
    }
  }

  & .delete__button:hover {
    // color: styles.$delete-color;

    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$delete-color);
    }
  }
}


// .edit__button:hover {
//   box-shadow: rgba(0, 162, 255, 0.6) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
// }

// .delete__button:hover {
//   box-shadow: rgba(255, 0, 0, 0.6) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
// }

// tr:nth-child(odd)>td>button {
//   background-color: styles.$white;
// }

.image {
  height: 100px;
}

// ----- TOGGLE BUTTON -----
input[type="checkbox"] {
  margin-left: 4px;
  position: relative;
  width: 3rem;
  height: 1rem;
  appearance: none;
  -webkit-appearance: none;
  background: linear-gradient(0deg, #333, #000);
  outline: none;
  border-radius: 20px;
  box-shadow: 0 0 0 4px #353535, 0 0 0 5px #3e3e3e, inset 0 0 10px rgba(0, 0, 0, 1);

  &:hover {
    cursor: pointer;
  }

  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 2rem;
    height: 1rem;
    background: linear-gradient(0deg, #000, #6b6b6b);
    border-radius: 20px;
    box-shadow: 0 0 0 1px #232323;
    transform: scale(.98, .96);
    transition: .5s;
  }

  &:after {
    content: '';
    position: absolute;
    top: calc(50% - 2px);
    // left:1.55rem;
    // width:4px;
    // height:4px;
    // border-radius: 50%;
    // background: linear-gradient(0deg, #6b6b6b, #000);
    left: 1.4em;
    width: 5px;
    height: 1.5px;
    background: aqua;
    border-radius: 1px;
    transition: .5s;
  }
}

input:checked[type="checkbox"] {

  &:nth-of-type(1) {
    background: linear-gradient(0deg, #e67e22, #f39c12);
    box-shadow: 0 0 0 4px #353535, 0 0 0 5px #3e3e3e, inset 0 0 10px rgba(0, 0, 0, 1);
  }

  // &:nth-of-type(2) {
  //   background: linear-gradient(0deg, #70a1ff, #1e90ff);
  //   box-shadow: 0 0 0 4px #353535, 0 0 0 5px #3e3e3e, inset 0 0 10px rgba(0, 0, 0, 1);
  // }

  &:before {
    left: 1rem;
  }

  &:after {
    // left: 2.55rem;
    left: 2.42rem;
  }
}









// ----- PAGINATION -----
.my-pagination ::ng-deep .ngx-pagination {

  & li {

    &.disabled {
      color: styles.$gray;
    }

    & a {
      color: styles.$white;
      text-decoration: none;

      &:hover {
        border-radius: 3px;
        color: styles.$theme;
        background: rgba(0, 0, 0, 0.3);
      }
    }
  }

  & .current {
    border-radius: 3px;
    color: styles.$theme;
    background-color: rgba(0, 0, 0, 0.3);
  }
}
