@use '../../../styles'as styles;

.wrapper {
  font-family: verdana;
}

.table {
  color: styles.$white;
}

// TH
thead {
  background-color: rgba(0, 0, 0, 0.3);
  text-align: left;
  position: sticky;
  top: 0;
  border: none !important; // bootstrap
  height: 50px;

  & tr {
    &::after {
      content: '';
      position: absolute;
      z-index: -1; // you can still select data from table rows
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      border-bottom: thin solid transparent;
      border-image: radial-gradient(ellipse at center, rgba(styles.$theme, 0.9) 95%, rgba(0, 0, 0, 0) 100%);
      border-image-slice: 1;
    }
  }

  & th {
    border: none;
    margin: auto 0;
    vertical-align: middle;
    white-space: nowrap;
    padding: 0 0.5rem;

    &:not(:last-child) {
      cursor: pointer;
      font-weight: 300;
    }

    &:first-child {
      padding-left: 1.5rem;
      border-top-left-radius: 0.6rem;
    }

    &:last-child {
      border-top-right-radius: 0.6rem;
    }

    & fa-icon {
      filter: drop-shadow(0px 0px 4px rgba(styles.$theme, 1));
    }

  }
}

tbody {
  border-top: none !important; // bootstrap

  & tr {
    position: relative; // to contain the ::after element within the table-row

    &:hover {
      background-color: rgba(0, 0, 0, 0.3);
    }

    &::after {
      content: '';
      position: absolute;
      z-index: 1;
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      border-bottom: thin solid transparent;
      border-image: radial-gradient(ellipse at center, rgba(styles.$theme, 0.7) 50%, rgba(0, 0, 0, 0) 100%); // 0.9 70%
      border-image-slice: 1;
    }

    & td {
      position: relative; // needed to apply a z-index
      z-index: 2; // needs to be higher than the z-index on the tr::after element
      border: none;
      padding: 0.3rem 0.5rem;

      &:first-child {
        padding-left: 1.5rem;
      }

    }
  }
}

.add__new {
  background-color: rgb(178, 227, 255);
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
}

.add__new:hover {
  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
}

@function tableButtonShadowGenerator($color) {
  @return drop-shadow(0px 0px 4px rgba($color, 1));
}

.admin__buttons {

  & button {
    color: styles.$white;
  }

  & .ban__button:hover {
    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$ban-color);
    }
  }

  & .unban__button:hover {
    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$unban-color);
    }
  }

  & .edit__button:hover {
    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$edit-color);
    }
  }

  & .delete__button:hover {
    & fa-icon {
      filter: tableButtonShadowGenerator(styles.$delete-color);
    }
  }
}

.image {
  height: 100px;
}

.select__wrapper {
  width: 236px;
}

.input__icon__wrapper {
  width: min-content;
  border-bottom: 1px solid styles.$theme;

  & fa-icon {
    color: styles.$white;
  }
}

.rows__wrapper {
  width: 55px;
}

// ----- PAGINATION -----
.my-pagination ::ng-deep .ngx-pagination {
  padding: 0;

  & li {
    &.disabled {
      color: styles.$gray;
    }

    & a {
      color: styles.$white;
      text-decoration: none;

      &:hover {
        border-radius: 3px;
        color: styles.$theme;
        background: rgba(0, 0, 0, 0.3);
      }
    }
  }

  & .current {
    border-radius: 3px;
    color: styles.$theme;
    background-color: rgba(0, 0, 0, 0.3);
  }
}

.dragged__item {
  background-color: transparent;
  cursor: ew-resize !important;
}

/* Underline styles */
th div {
  position: relative;
  padding: 1.3rem 0rem;
}

th div::after {
  content: '';
  position: absolute;
  bottom: 1rem;
  left: 0;
  width: 100%;
  height: 2px;
  border-radius: 1rem;
  background-color: styles.$theme;
  opacity: 0;
  transition: opacity 400ms, transform 400ms;
}

/* Fade in */

// th:hover::after,
// th:focus::after {
//   opacity: 1;
//   transform: translate3d(0, 0.2em, 0);
// }

/* Slide in */
th div {
  overflow: hidden;
}

th div::after {
  opacity: 1;
  transform: translate3d(-110%, 0, 0);
}

th:hover div::after,
th:focus div::after{
  transform: translate3d(0, 0, 0);
}

/* Scale from center */
// th div::after {
//   opacity: 1;
//   transform: scale(0);
//   transform-origin: center;
// }

// th:hover div::after,
// th:focus div::after{
//   transform: scale(1);
// }
